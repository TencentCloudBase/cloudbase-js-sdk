import { constants } from '@cloudbase/utilities';
var setUtilitiesSdkName = constants.setSdkName, setUtilitiesProtocol = constants.setProtocol;
var sdk_version = '';
var sdk_name = '@cloudbase/js-sdk';
export function setSdkVersion(version) {
    sdk_version = version;
}
export function getSdkVersion() {
    return sdk_version;
}
export function setSdkName(name) {
    sdk_name = name;
    setUtilitiesSdkName(name);
}
export function getSdkName() {
    return sdk_name;
}
export var DATA_VERSION = '2020-01-10';
var PROTOCOL = typeof location !== 'undefined' && location.protocol === 'http:'
    ? 'http:'
    : 'https:';
var BASE_URL = typeof process !== 'undefined' && process.env.NODE_ENV === 'e2e' && process.env.END_POINT === 'pre'
    ? '//tcb-pre.tencentcloudapi.com/web'
    : '//tcb-api.tencentcloudapi.com/web';
export function setEndPoint(url, protocol) {
    BASE_URL = url;
    if (protocol) {
        PROTOCOL = protocol;
        setUtilitiesProtocol(protocol);
    }
}
export function setRegionLevelEndpoint(env, region, protocol) {
    var endpoiont = region
        ? "//" + env + "." + region + ".tcb-api.tencentcloudapi.com/web"
        : "//" + env + ".ap-shanghai.tcb-api.tencentcloudapi.com/web";
    setEndPoint(endpoiont, protocol);
}
export function getEndPoint() {
    return { BASE_URL: BASE_URL, PROTOCOL: PROTOCOL };
}
export var LOGINTYPE;
(function (LOGINTYPE) {
    LOGINTYPE["ANONYMOUS"] = "ANONYMOUS";
    LOGINTYPE["WECHAT"] = "WECHAT";
    LOGINTYPE["CUSTOM"] = "CUSTOM";
    LOGINTYPE["NULL"] = "NULL";
})(LOGINTYPE || (LOGINTYPE = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbnN0YW50cy9jb21tb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBR3pDLElBQVksbUJBQW1CLEdBQXdDLFNBQVMsV0FBakQsRUFBZSxvQkFBb0IsR0FBSyxTQUFTLFlBQWQsQ0FBZTtBQUl6RixJQUFJLFdBQVcsR0FBRyxFQUFFLENBQUM7QUFDckIsSUFBSSxRQUFRLEdBQUcsbUJBQW1CLENBQUM7QUFFbkMsTUFBTSxVQUFVLGFBQWEsQ0FBQyxPQUFjO0lBQzFDLFdBQVcsR0FBRyxPQUFPLENBQUM7QUFDeEIsQ0FBQztBQUNELE1BQU0sVUFBVSxhQUFhO0lBQzNCLE9BQU8sV0FBVyxDQUFDO0FBQ3JCLENBQUM7QUFDRCxNQUFNLFVBQVUsVUFBVSxDQUFDLElBQVc7SUFDcEMsUUFBUSxHQUFHLElBQUksQ0FBQztJQUNoQixtQkFBbUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUM1QixDQUFDO0FBQ0QsTUFBTSxVQUFVLFVBQVU7SUFDeEIsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQztBQUNELE1BQU0sQ0FBQyxJQUFNLFlBQVksR0FBRyxZQUFZLENBQUM7QUFJekMsSUFBSSxRQUFRLEdBQUcsT0FBTyxRQUFRLEtBQUssV0FBVyxJQUFJLFFBQVEsQ0FBQyxRQUFRLEtBQUssT0FBTztJQUM3RSxDQUFDLENBQUMsT0FBTztJQUNULENBQUMsQ0FBQyxRQUFRLENBQUM7QUFDYixJQUFJLFFBQVEsR0FBRyxPQUFPLE9BQU8sS0FBSyxXQUFXLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEtBQUssS0FBSyxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxLQUFLLEtBQUs7SUFDaEgsQ0FBQyxDQUFDLG1DQUFtQztJQUNyQyxDQUFDLENBQUMsbUNBQW1DLENBQUM7QUFDeEMsTUFBTSxVQUFVLFdBQVcsQ0FBQyxHQUFVLEVBQUMsUUFBd0I7SUFDN0QsUUFBUSxHQUFHLEdBQUcsQ0FBQztJQUNmLElBQUcsUUFBUSxFQUFDO1FBQ1YsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUNwQixvQkFBb0IsQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUNoQztBQUNILENBQUM7QUFDRCxNQUFNLFVBQVUsc0JBQXNCLENBQUMsR0FBVSxFQUFDLE1BQWEsRUFBQyxRQUF3QjtJQUN0RixJQUFNLFNBQVMsR0FBRyxNQUFNO1FBQ3RCLENBQUMsQ0FBQyxPQUFLLEdBQUcsU0FBSSxNQUFNLHFDQUFrQztRQUN0RCxDQUFDLENBQUMsT0FBSyxHQUFHLGlEQUE4QyxDQUFBO0lBQzFELFdBQVcsQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDLENBQUE7QUFDbEMsQ0FBQztBQUNELE1BQU0sVUFBVSxXQUFXO0lBQ3pCLE9BQU8sRUFBRSxRQUFRLFVBQUEsRUFBRSxRQUFRLFVBQUEsRUFBRSxDQUFDO0FBQ2hDLENBQUM7QUFFRCxNQUFNLENBQU4sSUFBWSxTQUtYO0FBTEQsV0FBWSxTQUFTO0lBQ25CLG9DQUF1QixDQUFBO0lBQ3ZCLDhCQUFpQixDQUFBO0lBQ2pCLDhCQUFpQixDQUFBO0lBQ2pCLDBCQUFhLENBQUE7QUFDZixDQUFDLEVBTFcsU0FBUyxLQUFULFNBQVMsUUFLcEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25zdGFudHMgfSBmcm9tICdAY2xvdWRiYXNlL3V0aWxpdGllcyc7XG5cbi8vIEB0cy1pZ25vcmVcbmNvbnN0IHsgc2V0U2RrTmFtZTogc2V0VXRpbGl0aWVzU2RrTmFtZSwgc2V0UHJvdG9jb2w6IHNldFV0aWxpdGllc1Byb3RvY29sIH0gPSBjb25zdGFudHM7XG4vKipcbiAqIFNES1xuICovXG5sZXQgc2RrX3ZlcnNpb24gPSAnJztcbmxldCBzZGtfbmFtZSA9ICdAY2xvdWRiYXNlL2pzLXNkayc7XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRTZGtWZXJzaW9uKHZlcnNpb246c3RyaW5nKXtcbiAgc2RrX3ZlcnNpb24gPSB2ZXJzaW9uO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFNka1ZlcnNpb24oKXtcbiAgcmV0dXJuIHNka192ZXJzaW9uO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNldFNka05hbWUobmFtZTpzdHJpbmcpe1xuICBzZGtfbmFtZSA9IG5hbWU7XG4gIHNldFV0aWxpdGllc1Nka05hbWUobmFtZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0U2RrTmFtZSgpe1xuICByZXR1cm4gc2RrX25hbWU7XG59XG5leHBvcnQgY29uc3QgREFUQV9WRVJTSU9OID0gJzIwMjAtMDEtMTAnO1xuLyoqXG4gKiByZXF1ZXN0XG4gKi9cbmxldCBQUk9UT0NPTCA9IHR5cGVvZiBsb2NhdGlvbiAhPT0gJ3VuZGVmaW5lZCcgJiYgbG9jYXRpb24ucHJvdG9jb2wgPT09ICdodHRwOicgXG4gID8gJ2h0dHA6JyBcbiAgOiAnaHR0cHM6JztcbmxldCBCQVNFX1VSTCA9IHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2UyZScgJiYgcHJvY2Vzcy5lbnYuRU5EX1BPSU5UID09PSAncHJlJ1xuICA/ICcvL3RjYi1wcmUudGVuY2VudGNsb3VkYXBpLmNvbS93ZWInXG4gIDogJy8vdGNiLWFwaS50ZW5jZW50Y2xvdWRhcGkuY29tL3dlYic7XG5leHBvcnQgZnVuY3Rpb24gc2V0RW5kUG9pbnQodXJsOnN0cmluZyxwcm90b2NvbD86J2h0dHAnfCdodHRwcycpe1xuICBCQVNFX1VSTCA9IHVybDtcbiAgaWYocHJvdG9jb2wpe1xuICAgIFBST1RPQ09MID0gcHJvdG9jb2w7XG4gICAgc2V0VXRpbGl0aWVzUHJvdG9jb2wocHJvdG9jb2wpO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0UmVnaW9uTGV2ZWxFbmRwb2ludChlbnY6c3RyaW5nLHJlZ2lvbjpzdHJpbmcscHJvdG9jb2w/OidodHRwJ3wnaHR0cHMnKSB7XG4gIGNvbnN0IGVuZHBvaW9udCA9IHJlZ2lvblxuICAgID8gYC8vJHtlbnZ9LiR7cmVnaW9ufS50Y2ItYXBpLnRlbmNlbnRjbG91ZGFwaS5jb20vd2ViYFxuICAgIDogYC8vJHtlbnZ9LmFwLXNoYW5naGFpLnRjYi1hcGkudGVuY2VudGNsb3VkYXBpLmNvbS93ZWJgXG4gIHNldEVuZFBvaW50KGVuZHBvaW9udCwgcHJvdG9jb2wpXG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RW5kUG9pbnQoKXtcbiAgcmV0dXJuIHsgQkFTRV9VUkwsIFBST1RPQ09MIH07XG59XG5cbmV4cG9ydCBlbnVtIExPR0lOVFlQRSB7XG4gIEFOT05ZTU9VUyA9ICdBTk9OWU1PVVMnLFxuICBXRUNIQVQgPSAnV0VDSEFUJyxcbiAgQ1VTVE9NID0gJ0NVU1RPTScsXG4gIE5VTEwgPSAnTlVMTCcgLy8g5L+d55WZ5a2X77yM5Luj6KGo5pyq55m75b2VXG59Il19