import { constants } from '@cloudbase/utilities';
var setUtilitiesSdkName = constants.setSdkName, setUtilitiesProtocol = constants.setProtocol;
var sdk_version = '';
var sdk_name = '@cloudbase/js-sdk';
export function setSdkVersion(version) {
    sdk_version = version;
}
export function getSdkVersion() {
    return sdk_version;
}
export function setSdkName(name) {
    sdk_name = name;
    setUtilitiesSdkName(name);
}
export function getSdkName() {
    return sdk_name;
}
export var DATA_VERSION = '2020-01-10';
var PROTOCOL = 'https:';
var BASE_URL = typeof process !== 'undefined' && process.env.NODE_ENV === 'e2e' && process.env.END_POINT === 'pre'
    ? '//tcb-pre.tencentcloudapi.com/web'
    : '//tcb-api.tencentcloudapi.com/web';
export function setEndPoint(url, protocol) {
    BASE_URL = url;
    if (protocol) {
        PROTOCOL = protocol;
        setUtilitiesProtocol(protocol);
    }
}
export function setRegionLevelEndpoint(env, region, protocol) {
    var endpoiont = region
        ? "//" + env + "." + region + ".tcb-api.tencentcloudapi.com/web"
        : "//" + env + ".ap-shanghai.tcb-api.tencentcloudapi.com/web";
    setEndPoint(endpoiont, protocol);
}
export function getEndPoint() {
    return { BASE_URL: BASE_URL, PROTOCOL: PROTOCOL };
}
export function getBaseEndPoint() {
    var _a = getEndPoint(), PROTOCOL = _a.PROTOCOL, BASE_URL = _a.BASE_URL;
    var webEndpoint = "" + PROTOCOL + BASE_URL;
    return "" + new URL(webEndpoint).origin;
}
export var LOGINTYPE;
(function (LOGINTYPE) {
    LOGINTYPE["NULL"] = "NULL";
    LOGINTYPE["ANONYMOUS"] = "ANONYMOUS";
    LOGINTYPE["WECHAT"] = "WECHAT";
    LOGINTYPE["WECHAT_PUBLIC"] = "WECHAT-PUBLIC";
    LOGINTYPE["WECHAT_OPEN"] = "WECHAT-OPEN";
    LOGINTYPE["CUSTOM"] = "CUSTOM";
    LOGINTYPE["EMAIL"] = "EMAIL";
    LOGINTYPE["USERNAME"] = "USERNAME";
    LOGINTYPE["PHONE"] = "PHONE";
})(LOGINTYPE || (LOGINTYPE = {}));
export var OAUTH2_LOGINTYPE_PREFIX = 'OAUTH2';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbnN0YW50cy9jb21tb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBR3pDLElBQVksbUJBQW1CLEdBQXdDLFNBQVMsV0FBakQsRUFBZSxvQkFBb0IsR0FBSyxTQUFTLFlBQWQsQ0FBZTtBQUl6RixJQUFJLFdBQVcsR0FBRyxFQUFFLENBQUM7QUFDckIsSUFBSSxRQUFRLEdBQUcsbUJBQW1CLENBQUM7QUFFbkMsTUFBTSxVQUFVLGFBQWEsQ0FBQyxPQUFlO0lBQzNDLFdBQVcsR0FBRyxPQUFPLENBQUM7QUFDeEIsQ0FBQztBQUNELE1BQU0sVUFBVSxhQUFhO0lBQzNCLE9BQU8sV0FBVyxDQUFDO0FBQ3JCLENBQUM7QUFDRCxNQUFNLFVBQVUsVUFBVSxDQUFDLElBQVk7SUFDckMsUUFBUSxHQUFHLElBQUksQ0FBQztJQUNoQixtQkFBbUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUM1QixDQUFDO0FBQ0QsTUFBTSxVQUFVLFVBQVU7SUFDeEIsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQztBQUNELE1BQU0sQ0FBQyxJQUFNLFlBQVksR0FBRyxZQUFZLENBQUM7QUFRekMsSUFBSSxRQUFRLEdBQUcsUUFBUSxDQUFBO0FBRXZCLElBQUksUUFBUSxHQUFHLE9BQU8sT0FBTyxLQUFLLFdBQVcsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsS0FBSyxLQUFLLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEtBQUssS0FBSztJQUNoSCxDQUFDLENBQUMsbUNBQW1DO0lBQ3JDLENBQUMsQ0FBQyxtQ0FBbUMsQ0FBQztBQUN4QyxNQUFNLFVBQVUsV0FBVyxDQUFDLEdBQVcsRUFBRSxRQUEyQjtJQUNsRSxRQUFRLEdBQUcsR0FBRyxDQUFDO0lBQ2YsSUFBSSxRQUFRLEVBQUU7UUFDWixRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3BCLG9CQUFvQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQ2hDO0FBQ0gsQ0FBQztBQUNELE1BQU0sVUFBVSxzQkFBc0IsQ0FBQyxHQUFXLEVBQUUsTUFBYyxFQUFFLFFBQTJCO0lBQzdGLElBQU0sU0FBUyxHQUFHLE1BQU07UUFDdEIsQ0FBQyxDQUFDLE9BQUssR0FBRyxTQUFJLE1BQU0scUNBQWtDO1FBQ3RELENBQUMsQ0FBQyxPQUFLLEdBQUcsaURBQThDLENBQUE7SUFDMUQsV0FBVyxDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUMsQ0FBQTtBQUNsQyxDQUFDO0FBQ0QsTUFBTSxVQUFVLFdBQVc7SUFDekIsT0FBTyxFQUFFLFFBQVEsVUFBQSxFQUFFLFFBQVEsVUFBQSxFQUFFLENBQUM7QUFDaEMsQ0FBQztBQUdELE1BQU0sVUFBVSxlQUFlO0lBQ3ZCLElBQUEsS0FBeUIsV0FBVyxFQUFFLEVBQXBDLFFBQVEsY0FBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQTtJQUM1QyxJQUFNLFdBQVcsR0FBRyxLQUFHLFFBQVEsR0FBRyxRQUFVLENBQUE7SUFDNUMsT0FBTyxLQUFHLElBQUksR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDLE1BQVEsQ0FBQTtBQUN6QyxDQUFDO0FBRUQsTUFBTSxDQUFOLElBQVksU0FVWDtBQVZELFdBQVksU0FBUztJQUNuQiwwQkFBYSxDQUFBO0lBQ2Isb0NBQXVCLENBQUE7SUFDdkIsOEJBQWlCLENBQUE7SUFDakIsNENBQStCLENBQUE7SUFDL0Isd0NBQTJCLENBQUE7SUFDM0IsOEJBQWlCLENBQUE7SUFDakIsNEJBQWUsQ0FBQTtJQUNmLGtDQUFxQixDQUFBO0lBQ3JCLDRCQUFlLENBQUE7QUFDakIsQ0FBQyxFQVZXLFNBQVMsS0FBVCxTQUFTLFFBVXBCO0FBRUQsTUFBTSxDQUFDLElBQU0sdUJBQXVCLEdBQUcsUUFBUSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uc3RhbnRzIH0gZnJvbSAnQGNsb3VkYmFzZS91dGlsaXRpZXMnO1xuXG4vLyBAdHMtaWdub3JlXG5jb25zdCB7IHNldFNka05hbWU6IHNldFV0aWxpdGllc1Nka05hbWUsIHNldFByb3RvY29sOiBzZXRVdGlsaXRpZXNQcm90b2NvbCB9ID0gY29uc3RhbnRzO1xuLyoqXG4gKiBTREtcbiAqL1xubGV0IHNka192ZXJzaW9uID0gJyc7XG5sZXQgc2RrX25hbWUgPSAnQGNsb3VkYmFzZS9qcy1zZGsnO1xuXG5leHBvcnQgZnVuY3Rpb24gc2V0U2RrVmVyc2lvbih2ZXJzaW9uOiBzdHJpbmcpIHtcbiAgc2RrX3ZlcnNpb24gPSB2ZXJzaW9uO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFNka1ZlcnNpb24oKSB7XG4gIHJldHVybiBzZGtfdmVyc2lvbjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXRTZGtOYW1lKG5hbWU6IHN0cmluZykge1xuICBzZGtfbmFtZSA9IG5hbWU7XG4gIHNldFV0aWxpdGllc1Nka05hbWUobmFtZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0U2RrTmFtZSgpIHtcbiAgcmV0dXJuIHNka19uYW1lO1xufVxuZXhwb3J0IGNvbnN0IERBVEFfVkVSU0lPTiA9ICcyMDIwLTAxLTEwJztcbi8qKlxuICogcmVxdWVzdFxuICovXG4vLyBsZXQgUFJPVE9DT0wgPSB0eXBlb2YgbG9jYXRpb24gIT09ICd1bmRlZmluZWQnICYmIGxvY2F0aW9uLnByb3RvY29sID09PSAnaHR0cDonXG4vLyAgID8gJ2h0dHA6J1xuLy8gICA6ICdodHRwczonO1xuXG5sZXQgUFJPVE9DT0wgPSAnaHR0cHM6J1xuXG5sZXQgQkFTRV9VUkwgPSB0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdlMmUnICYmIHByb2Nlc3MuZW52LkVORF9QT0lOVCA9PT0gJ3ByZSdcbiAgPyAnLy90Y2ItcHJlLnRlbmNlbnRjbG91ZGFwaS5jb20vd2ViJ1xuICA6ICcvL3RjYi1hcGkudGVuY2VudGNsb3VkYXBpLmNvbS93ZWInO1xuZXhwb3J0IGZ1bmN0aW9uIHNldEVuZFBvaW50KHVybDogc3RyaW5nLCBwcm90b2NvbD86ICdodHRwJyB8ICdodHRwcycpIHtcbiAgQkFTRV9VUkwgPSB1cmw7XG4gIGlmIChwcm90b2NvbCkge1xuICAgIFBST1RPQ09MID0gcHJvdG9jb2w7XG4gICAgc2V0VXRpbGl0aWVzUHJvdG9jb2wocHJvdG9jb2wpO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0UmVnaW9uTGV2ZWxFbmRwb2ludChlbnY6IHN0cmluZywgcmVnaW9uOiBzdHJpbmcsIHByb3RvY29sPzogJ2h0dHAnIHwgJ2h0dHBzJykge1xuICBjb25zdCBlbmRwb2lvbnQgPSByZWdpb25cbiAgICA/IGAvLyR7ZW52fS4ke3JlZ2lvbn0udGNiLWFwaS50ZW5jZW50Y2xvdWRhcGkuY29tL3dlYmBcbiAgICA6IGAvLyR7ZW52fS5hcC1zaGFuZ2hhaS50Y2ItYXBpLnRlbmNlbnRjbG91ZGFwaS5jb20vd2ViYFxuICBzZXRFbmRQb2ludChlbmRwb2lvbnQsIHByb3RvY29sKVxufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEVuZFBvaW50KCkge1xuICByZXR1cm4geyBCQVNFX1VSTCwgUFJPVE9DT0wgfTtcbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0QmFzZUVuZFBvaW50KCkge1xuICBjb25zdCB7IFBST1RPQ09MLCBCQVNFX1VSTCB9ID0gZ2V0RW5kUG9pbnQoKVxuICBjb25zdCB3ZWJFbmRwb2ludCA9IGAke1BST1RPQ09MfSR7QkFTRV9VUkx9YFxuICByZXR1cm4gYCR7bmV3IFVSTCh3ZWJFbmRwb2ludCkub3JpZ2lufWBcbn1cblxuZXhwb3J0IGVudW0gTE9HSU5UWVBFIHtcbiAgTlVMTCA9ICdOVUxMJyxcbiAgQU5PTllNT1VTID0gJ0FOT05ZTU9VUycsXG4gIFdFQ0hBVCA9ICdXRUNIQVQnLFxuICBXRUNIQVRfUFVCTElDID0gJ1dFQ0hBVC1QVUJMSUMnLFxuICBXRUNIQVRfT1BFTiA9ICdXRUNIQVQtT1BFTicsXG4gIENVU1RPTSA9ICdDVVNUT00nLFxuICBFTUFJTCA9ICdFTUFJTCcsXG4gIFVTRVJOQU1FID0gJ1VTRVJOQU1FJyxcbiAgUEhPTkUgPSAnUEhPTkUnXG59XG5cbmV4cG9ydCBjb25zdCBPQVVUSDJfTE9HSU5UWVBFX1BSRUZJWCA9ICdPQVVUSDInXG4iXX0=