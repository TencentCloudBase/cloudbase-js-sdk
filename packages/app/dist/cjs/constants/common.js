"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OAUTH2_LOGINTYPE_PREFIX = exports.LOGINTYPE = exports.getEndPoint = exports.setRegionLevelEndpoint = exports.setEndPoint = exports.DATA_VERSION = exports.getSdkName = exports.setSdkName = exports.getSdkVersion = exports.setSdkVersion = void 0;
var utilities_1 = require("@cloudbase/utilities");
var setUtilitiesSdkName = utilities_1.constants.setSdkName, setUtilitiesProtocol = utilities_1.constants.setProtocol;
var sdk_version = '';
var sdk_name = '@cloudbase/js-sdk';
function setSdkVersion(version) {
    sdk_version = version;
}
exports.setSdkVersion = setSdkVersion;
function getSdkVersion() {
    return sdk_version;
}
exports.getSdkVersion = getSdkVersion;
function setSdkName(name) {
    sdk_name = name;
    setUtilitiesSdkName(name);
}
exports.setSdkName = setSdkName;
function getSdkName() {
    return sdk_name;
}
exports.getSdkName = getSdkName;
exports.DATA_VERSION = '2020-01-10';
var PROTOCOL = typeof location !== 'undefined' && location.protocol === 'http:'
    ? 'http:'
    : 'https:';
var BASE_URL = typeof process !== 'undefined' && process.env.NODE_ENV === 'e2e' && process.env.END_POINT === 'pre'
    ? '//tcb-pre.tencentcloudapi.com/web'
    : '//tcb-api.tencentcloudapi.com/web';
function setEndPoint(url, protocol) {
    BASE_URL = url;
    if (protocol) {
        PROTOCOL = protocol;
        setUtilitiesProtocol(protocol);
    }
}
exports.setEndPoint = setEndPoint;
function setRegionLevelEndpoint(env, region, protocol) {
    var endpoiont = region
        ? "//" + env + "." + region + ".tcb-api.tencentcloudapi.com/web"
        : "//" + env + ".ap-shanghai.tcb-api.tencentcloudapi.com/web";
    setEndPoint(endpoiont, protocol);
}
exports.setRegionLevelEndpoint = setRegionLevelEndpoint;
function getEndPoint() {
    return { BASE_URL: BASE_URL, PROTOCOL: PROTOCOL };
}
exports.getEndPoint = getEndPoint;
var LOGINTYPE;
(function (LOGINTYPE) {
    LOGINTYPE["NULL"] = "NULL";
    LOGINTYPE["ANONYMOUS"] = "ANONYMOUS";
    LOGINTYPE["WECHAT"] = "WECHAT";
    LOGINTYPE["WECHAT_PUBLIC"] = "WECHAT-PUBLIC";
    LOGINTYPE["WECHAT_OPEN"] = "WECHAT-OPEN";
    LOGINTYPE["CUSTOM"] = "CUSTOM";
    LOGINTYPE["EMAIL"] = "EMAIL";
    LOGINTYPE["USERNAME"] = "USERNAME";
    LOGINTYPE["PHONE"] = "PHONE";
})(LOGINTYPE = exports.LOGINTYPE || (exports.LOGINTYPE = {}));
exports.OAUTH2_LOGINTYPE_PREFIX = 'OAUTH2';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbnN0YW50cy9jb21tb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsa0RBQWlEO0FBR3pDLElBQVksbUJBQW1CLEdBQXdDLHFCQUFTLFdBQWpELEVBQWUsb0JBQW9CLEdBQUsscUJBQVMsWUFBZCxDQUFlO0FBSXpGLElBQUksV0FBVyxHQUFHLEVBQUUsQ0FBQztBQUNyQixJQUFJLFFBQVEsR0FBRyxtQkFBbUIsQ0FBQztBQUVuQyxTQUFnQixhQUFhLENBQUMsT0FBYztJQUMxQyxXQUFXLEdBQUcsT0FBTyxDQUFDO0FBQ3hCLENBQUM7QUFGRCxzQ0FFQztBQUNELFNBQWdCLGFBQWE7SUFDM0IsT0FBTyxXQUFXLENBQUM7QUFDckIsQ0FBQztBQUZELHNDQUVDO0FBQ0QsU0FBZ0IsVUFBVSxDQUFDLElBQVc7SUFDcEMsUUFBUSxHQUFHLElBQUksQ0FBQztJQUNoQixtQkFBbUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUM1QixDQUFDO0FBSEQsZ0NBR0M7QUFDRCxTQUFnQixVQUFVO0lBQ3hCLE9BQU8sUUFBUSxDQUFDO0FBQ2xCLENBQUM7QUFGRCxnQ0FFQztBQUNZLFFBQUEsWUFBWSxHQUFHLFlBQVksQ0FBQztBQUl6QyxJQUFJLFFBQVEsR0FBRyxPQUFPLFFBQVEsS0FBSyxXQUFXLElBQUksUUFBUSxDQUFDLFFBQVEsS0FBSyxPQUFPO0lBQzdFLENBQUMsQ0FBQyxPQUFPO0lBQ1QsQ0FBQyxDQUFDLFFBQVEsQ0FBQztBQUNiLElBQUksUUFBUSxHQUFHLE9BQU8sT0FBTyxLQUFLLFdBQVcsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsS0FBSyxLQUFLLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEtBQUssS0FBSztJQUNoSCxDQUFDLENBQUMsbUNBQW1DO0lBQ3JDLENBQUMsQ0FBQyxtQ0FBbUMsQ0FBQztBQUN4QyxTQUFnQixXQUFXLENBQUMsR0FBVSxFQUFDLFFBQXdCO0lBQzdELFFBQVEsR0FBRyxHQUFHLENBQUM7SUFDZixJQUFHLFFBQVEsRUFBQztRQUNWLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDcEIsb0JBQW9CLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDaEM7QUFDSCxDQUFDO0FBTkQsa0NBTUM7QUFDRCxTQUFnQixzQkFBc0IsQ0FBQyxHQUFVLEVBQUMsTUFBYSxFQUFDLFFBQXdCO0lBQ3RGLElBQU0sU0FBUyxHQUFHLE1BQU07UUFDdEIsQ0FBQyxDQUFDLE9BQUssR0FBRyxTQUFJLE1BQU0scUNBQWtDO1FBQ3RELENBQUMsQ0FBQyxPQUFLLEdBQUcsaURBQThDLENBQUE7SUFDMUQsV0FBVyxDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUMsQ0FBQTtBQUNsQyxDQUFDO0FBTEQsd0RBS0M7QUFDRCxTQUFnQixXQUFXO0lBQ3pCLE9BQU8sRUFBRSxRQUFRLFVBQUEsRUFBRSxRQUFRLFVBQUEsRUFBRSxDQUFDO0FBQ2hDLENBQUM7QUFGRCxrQ0FFQztBQUVELElBQVksU0FVWDtBQVZELFdBQVksU0FBUztJQUNuQiwwQkFBYSxDQUFBO0lBQ2Isb0NBQXVCLENBQUE7SUFDdkIsOEJBQWlCLENBQUE7SUFDakIsNENBQStCLENBQUE7SUFDL0Isd0NBQTJCLENBQUE7SUFDM0IsOEJBQWlCLENBQUE7SUFDakIsNEJBQWUsQ0FBQTtJQUNmLGtDQUFxQixDQUFBO0lBQ3JCLDRCQUFlLENBQUE7QUFDakIsQ0FBQyxFQVZXLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBVXBCO0FBRVksUUFBQSx1QkFBdUIsR0FBRyxRQUFRLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25zdGFudHMgfSBmcm9tICdAY2xvdWRiYXNlL3V0aWxpdGllcyc7XG5cbi8vIEB0cy1pZ25vcmVcbmNvbnN0IHsgc2V0U2RrTmFtZTogc2V0VXRpbGl0aWVzU2RrTmFtZSwgc2V0UHJvdG9jb2w6IHNldFV0aWxpdGllc1Byb3RvY29sIH0gPSBjb25zdGFudHM7XG4vKipcbiAqIFNES1xuICovXG5sZXQgc2RrX3ZlcnNpb24gPSAnJztcbmxldCBzZGtfbmFtZSA9ICdAY2xvdWRiYXNlL2pzLXNkayc7XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRTZGtWZXJzaW9uKHZlcnNpb246c3RyaW5nKXtcbiAgc2RrX3ZlcnNpb24gPSB2ZXJzaW9uO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFNka1ZlcnNpb24oKXtcbiAgcmV0dXJuIHNka192ZXJzaW9uO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNldFNka05hbWUobmFtZTpzdHJpbmcpe1xuICBzZGtfbmFtZSA9IG5hbWU7XG4gIHNldFV0aWxpdGllc1Nka05hbWUobmFtZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0U2RrTmFtZSgpe1xuICByZXR1cm4gc2RrX25hbWU7XG59XG5leHBvcnQgY29uc3QgREFUQV9WRVJTSU9OID0gJzIwMjAtMDEtMTAnO1xuLyoqXG4gKiByZXF1ZXN0XG4gKi9cbmxldCBQUk9UT0NPTCA9IHR5cGVvZiBsb2NhdGlvbiAhPT0gJ3VuZGVmaW5lZCcgJiYgbG9jYXRpb24ucHJvdG9jb2wgPT09ICdodHRwOicgXG4gID8gJ2h0dHA6JyBcbiAgOiAnaHR0cHM6JztcbmxldCBCQVNFX1VSTCA9IHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2UyZScgJiYgcHJvY2Vzcy5lbnYuRU5EX1BPSU5UID09PSAncHJlJ1xuICA/ICcvL3RjYi1wcmUudGVuY2VudGNsb3VkYXBpLmNvbS93ZWInXG4gIDogJy8vdGNiLWFwaS50ZW5jZW50Y2xvdWRhcGkuY29tL3dlYic7XG5leHBvcnQgZnVuY3Rpb24gc2V0RW5kUG9pbnQodXJsOnN0cmluZyxwcm90b2NvbD86J2h0dHAnfCdodHRwcycpe1xuICBCQVNFX1VSTCA9IHVybDtcbiAgaWYocHJvdG9jb2wpe1xuICAgIFBST1RPQ09MID0gcHJvdG9jb2w7XG4gICAgc2V0VXRpbGl0aWVzUHJvdG9jb2wocHJvdG9jb2wpO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0UmVnaW9uTGV2ZWxFbmRwb2ludChlbnY6c3RyaW5nLHJlZ2lvbjpzdHJpbmcscHJvdG9jb2w/OidodHRwJ3wnaHR0cHMnKSB7XG4gIGNvbnN0IGVuZHBvaW9udCA9IHJlZ2lvblxuICAgID8gYC8vJHtlbnZ9LiR7cmVnaW9ufS50Y2ItYXBpLnRlbmNlbnRjbG91ZGFwaS5jb20vd2ViYFxuICAgIDogYC8vJHtlbnZ9LmFwLXNoYW5naGFpLnRjYi1hcGkudGVuY2VudGNsb3VkYXBpLmNvbS93ZWJgXG4gIHNldEVuZFBvaW50KGVuZHBvaW9udCwgcHJvdG9jb2wpXG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RW5kUG9pbnQoKXtcbiAgcmV0dXJuIHsgQkFTRV9VUkwsIFBST1RPQ09MIH07XG59XG5cbmV4cG9ydCBlbnVtIExPR0lOVFlQRSB7XG4gIE5VTEwgPSAnTlVMTCcsXG4gIEFOT05ZTU9VUyA9ICdBTk9OWU1PVVMnLFxuICBXRUNIQVQgPSAnV0VDSEFUJyxcbiAgV0VDSEFUX1BVQkxJQyA9ICdXRUNIQVQtUFVCTElDJyxcbiAgV0VDSEFUX09QRU4gPSAnV0VDSEFULU9QRU4nLFxuICBDVVNUT00gPSAnQ1VTVE9NJyxcbiAgRU1BSUwgPSAnRU1BSUwnLFxuICBVU0VSTkFNRSA9ICdVU0VSTkFNRScsXG4gIFBIT05FID0gJ1BIT05FJ1xufVxuXG5leHBvcnQgY29uc3QgT0FVVEgyX0xPR0lOVFlQRV9QUkVGSVggPSAnT0FVVEgyJ1xuIl19